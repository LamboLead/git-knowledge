$ git reset ...

Command used to undo changes. It operates in the commit history, the staging area, and the working directory (depending on the way it's invoked).

'git reset' has some similarities with 'git checkout', as they both operate on HEAD:
    'git checkout' moves the HEAD pointer to the specified commit, and the repository enters the state 'Detached HEAD'.
    'git reset' command switches both HEAD and branch references to the defined commit, changing the state of the three trees as well (working directory, staging area, and commit history).

The three options below '--soft', '--mixed', and '--hard' define the modification of the staging area and working directory.

--- OPTIONS

    (If no commits are specified, the commit is the one that HEAD is pointing to)

    --mixed <commit_ID>
        Same as none. The commit history will be reset to the stated commit, and any commit down the commit history will be deleted, the staging area is reset, and the pending changes from the staging area are placed in the working directory. However, the working directory remains unchanged.

    --hard <commit_ID>~<number>
        The commit history will be reset to the stated commit, and any work done down the commit history will be lost. The staging index and the working directory are reset.
        If <number> is used, the commit history will be reset to the number of commits stated before the stated commit. This option applies to '--mixed' and '--soft' as well.

    --soft <commit_ID>
        Resets the commit history to the specified commit, and any work done down the commit history will be lost. It doesn't affect the staging area or working directory.

    <file>
        Removes the specified file from the staging area.

--- NOTES

    Do not use 'git reset' on public repositories because other developer rely on the commits that you may delete with it. Only use this command on local repositories.
    To undo changes on public repositories, use 'git revert'

--- EXAMPLES

    Reset the current branch by two commits, without touching the working directory:
        $ git reset --mixed HEAD~2

    Unstage "test_file.txt" from the staging area:
        $ git reset test_file.txt

    Move the branch tip back to commit "43ef8b4", delete all commits down the commit history, and reset the staging area and working directory to match with the stated commit:
        $ git reset --hard 43ef8b4