A diff of the current master branch against master 1 week ago.
    git diff master@{0} master@{1.week.ago}

--- UNDOING CHANGES ---

Undoing the last commit: The working directory is reverted to the last commit, reverted changes are staged, and Git will open text editor to modify the last commited message
    git commit --amend

Undoing uncommited changes: Undoes changes on the staging area and the working directory
    git reset

Do not use git reset on a public repository because other developers may rely on the commit you deleted with this command. Instead, use git revert.

Undoing git rm: Reverts the current staging area and working directory back to the HEAD commit.
    git reset HEAD
    git checkout .

Do not use git commit --amend in public repositories.

--- REVIEWING CODE ---

Reviewing old commits
    git log

--- SYNCING REPOSITORIES ---

{
    Fetch a remote branch and update the local working state to the remote content.

    1. Configure the remote repository:
        git remote test_repo git@hostname:test/test_repo.git
    2. Download the content of the "feature_branch" branch. This will integrate the content of the branch to the local repository:
        git fetch test_repo feature_branch
    3. Checkout the downloaded remote branch:
        git checkout test_repo/feature_branch
    4. Create a new local branch from "test_repo/feature_branch":
        git checkout -b local_feature_branch
}

{
    Synchronize the local repository with the central repository's master branch
    
    1. Show the branches that have been downloaded from "origin":
        git fetch origin
    2. Show the commits added to the upstream master:
        git log master..origin/master
    3. Check the changes:
        git checkout master
        git log origin/master
    4. Merge the changes into the local master branch:
        git merge origin/master
}